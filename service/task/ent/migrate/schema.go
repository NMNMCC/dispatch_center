// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
	}
	// TasksColumns holds the columns for the "tasks" table.
	TasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "running", "completed", "failed"}, Default: "pending"},
		{Name: "body", Type: field.TypeJSON},
	}
	// TasksTable holds the schema information for the "tasks" table.
	TasksTable = &schema.Table{
		Name:       "tasks",
		Columns:    TasksColumns,
		PrimaryKey: []*schema.Column{TasksColumns[0]},
	}
	// WorkersColumns holds the columns for the "workers" table.
	WorkersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "end_of_life", Type: field.TypeTime},
		{Name: "task_worker", Type: field.TypeUUID, Unique: true, Nullable: true},
	}
	// WorkersTable holds the schema information for the "workers" table.
	WorkersTable = &schema.Table{
		Name:       "workers",
		Columns:    WorkersColumns,
		PrimaryKey: []*schema.Column{WorkersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workers_tasks_worker",
				Columns:    []*schema.Column{WorkersColumns[2]},
				RefColumns: []*schema.Column{TasksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TagTasksColumns holds the columns for the "tag_tasks" table.
	TagTasksColumns = []*schema.Column{
		{Name: "tag_id", Type: field.TypeUUID},
		{Name: "task_id", Type: field.TypeUUID},
	}
	// TagTasksTable holds the schema information for the "tag_tasks" table.
	TagTasksTable = &schema.Table{
		Name:       "tag_tasks",
		Columns:    TagTasksColumns,
		PrimaryKey: []*schema.Column{TagTasksColumns[0], TagTasksColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tag_tasks_tag_id",
				Columns:    []*schema.Column{TagTasksColumns[0]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "tag_tasks_task_id",
				Columns:    []*schema.Column{TagTasksColumns[1]},
				RefColumns: []*schema.Column{TasksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		TagsTable,
		TasksTable,
		WorkersTable,
		TagTasksTable,
	}
)

func init() {
	WorkersTable.ForeignKeys[0].RefTable = TasksTable
	TagTasksTable.ForeignKeys[0].RefTable = TagsTable
	TagTasksTable.ForeignKeys[1].RefTable = TasksTable
}
